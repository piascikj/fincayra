<configuration xmlns:mode="http://www.modeshape.org/1.0" xmlns:jcr="http://www.jcp.org/jcr/1.0">
	<!--

		Define the sources for the content. These sources are directly
		accessible using the ModeShape-specific Graph API. In fact, this is
		how the ModeShape JCR implementation works. You can think of these as
		being similar to JDBC DataSource objects, except that they expose

		graph content via the Graph API instead of records via SQL or JDBC.
	-->

	<mode:sources jcr:primaryType="nt:unstructured">
		<!--

			The 'Infinispan' repository is a Infinispan repository with a
			single default workspace (though others could be created, too).
		-->

		<mode:source jcr:name="Infinispan"

			mode:classname="org.modeshape.connector.infinispan.InfinispanSource"

			mode:description="The repository for our content"

			mode:defaultworkspaceName="objects">

			<mode:predefinedWorkspaceNames>objects</mode:predefinedWorkspaceNames>
			<mode:predefinedWorkspaceNames>system</mode:predefinedWorkspaceNames>
			<mode:cacheConfigurationName>/grid.xml</mode:cacheConfigurationName>
		</mode:source>
		
	</mode:sources>
	<!-- 

      Define the JCR repositories 

      -->

	<mode:repositories>

		<!--

			Define a JCR repository that accesses the 'Infinispan' source directly.
		-->

		<mode:repository jcr:name="fincayra-repository"	mode:source="Infinispan">

			
			<mode:options jcr:primaryType="mode:options">
				<systemSourceName jcr:primaryType="mode:option" mode:value="system@Infinispan"/>
			<!-- 
				<jaasLoginConfigName jcr:primaryType="mode:option"
					mode:value="modeshape-jcr" />

					As a convenience, ModeShape defaults to granting guest users full
					access. In a production system, you would want to limit this access
					by uncommenting one of the options below: for no access:

					<anonymousUserRoles jcr:PrimaryType="mode:option" mode:value="" />



					for read-only acces: <anonymousUserRoles
					jcr:PrimaryType="mode:option" mode:value="readonly" />
 			-->
			</mode:options>
 			
		</mode:repository>

	</mode:repositories>

	<mode:clustering clusterName="fincayra-repository-cluster">
		<mode:configuration><![CDATA[
			<config>
			   <UDP  mcast_addr="${jgroups.udp.mcast_addr:228.6.7.9}"
					 mcast_port="${jgroups.udp.mcast_port:46656}"
					 tos="8"
					 ucast_recv_buf_size="20000000"
					 ucast_send_buf_size="640000"
					 mcast_recv_buf_size="25000000"
					 mcast_send_buf_size="640000"
					 loopback="true"
					 discard_incompatible_packets="true"
					 max_bundle_size="64000"
					 max_bundle_timeout="30"
					 ip_ttl="${jgroups.udp.ip_ttl:2}"
					 enable_bundling="true"
					 enable_diagnostics="false"

					 thread_naming_pattern="pl"

					 thread_pool.enabled="true"
					 thread_pool.min_threads="2"
					 thread_pool.max_threads="30"
					 thread_pool.keep_alive_time="5000"
					 thread_pool.queue_enabled="false"
					 thread_pool.queue_max_size="100"
					 thread_pool.rejection_policy="Discard"

					 oob_thread_pool.enabled="true"
					 oob_thread_pool.min_threads="2"
					 oob_thread_pool.max_threads="30"
					 oob_thread_pool.keep_alive_time="5000"
					 oob_thread_pool.queue_enabled="false"
					 oob_thread_pool.queue_max_size="100"
					 oob_thread_pool.rejection_policy="Discard"
					 />

			   <PING timeout="3000" num_initial_members="3"/>
			   <MERGE2 max_interval="30000" min_interval="10000"/>
			   <FD_SOCK/>
			   <FD_ALL/>
			   <BARRIER />
			   <pbcast.NAKACK use_stats_for_retransmission="false"
							   exponential_backoff="0"
							   use_mcast_xmit="true" gc_lag="0"
							   retransmit_timeout="300,600,1200"
							   discard_delivered_msgs="true"/>
			   <UNICAST timeout="300,600,1200"/>
			   <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000" max_bytes="1000000"/>
			   <pbcast.GMS print_local_addr="false" join_timeout="3000" view_bundling="true"/>
			   <FC max_credits="500000" min_threshold="0.20"/>
			   <FRAG2 frag_size="60000"  />
			   <pbcast.STREAMING_STATE_TRANSFER/>
			   <pbcast.FLUSH timeout="0"/>
			</config>
		
		]]>
		</mode:configuration>
	</mode:clustering>

</configuration>
